use hyper::StatusCode;
use argentum_rest_infrastructure::data_type::http_response::ContentTypeResponseTrait;

{{#each responseNames as |name|}}
use crate::dto::response::{{name}}Response;
{{/each}}

pub enum {{ operation.operationId }}OperationResponseEnum {
{{#each responseNames as |name|}}
    Status{{@key}}({{name}}Response),
{{/each}}
}

impl {{ operation.operationId }}OperationResponseEnum {
    pub fn to_status_code(&self) -> StatusCode {
        match self {
        {{#each responseNames as |name|}}
            Self::Status{{@key}}(_) => StatusCode::from_u16({{@key}}).unwrap_or(StatusCode::INTERNAL_SERVER_ERROR),
        {{/each}}
        }
    }

    pub fn to_response(&self) -> Box<dyn ContentTypeResponseTrait> {
        match self {
        {{#each responseNames as |name|}}
            Self::Status{{@key}}(r) => r.to_content_type_response_trait(),
        {{/each}}
        }
    }
}
